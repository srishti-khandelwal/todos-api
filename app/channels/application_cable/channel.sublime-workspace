{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"server",
				"serverTransactionController"
			],
			[
				"cons",
				"console\t(appTest.js)"
			],
			[
				"time",
				"timestamp\t(transaction.js)"
			],
			[
				"don",
				"done()\tglob.js"
			],
			[
				"getPvtK",
				"getUserPvtKey(userAddress)\tuser.js"
			],
			[
				"wrongUser",
				"wrongUserId"
			],
			[
				"user",
				"userId"
			],
			[
				"insertInto",
				"insertIntoTransactions"
			],
			[
				"the",
				"then()\tensure-promise.js"
			],
			[
				"con",
				"console\t(appTest.js)"
			],
			[
				"transact",
				"transactionConroller"
			],
			[
				"co",
				"console\t(seed.js)"
			],
			[
				"re",
				"return"
			],
			[
				"cl",
				"clean"
			],
			[
				"rese",
				"reset()\tcore.js"
			],
			[
				"insertInt",
				"insertIntoTransaction"
			],
			[
				"inser",
				"insertIntoUser"
			],
			[
				"TR",
				"TRX_TO_SUN\tappTest.js"
			],
			[
				"amt",
				"amtInTron"
			],
			[
				"userBal",
				"userBalAfterTransfer2"
			],
			[
				"userBalAfte",
				"userBalAfterTransfer2"
			],
			[
				"userB",
				"userBalAfterTransfer2"
			],
			[
				"transactionI",
				"transactionId2"
			],
			[
				"transactionId",
				"transactionId2"
			],
			[
				"tra",
				"transaction"
			],
			[
				"userbal",
				"userBalBefore"
			],
			[
				"TRON_TEST",
				"TRON_TEST_USER_HEX_ADDRESS"
			],
			[
				"getBala",
				"getBalanceByAddress(address)\ttron.js"
			],
			[
				"TRON_TEST_",
				"TRON_TEST_USER_ADDRESS"
			],
			[
				"generateR",
				"generateRandomNumber()\tutils.js"
			],
			[
				"TEST_U",
				"TRON_TEST_USER_ID"
			],
			[
				"starts",
				"startsWith(string, target, position)\tlodash.js"
			],
			[
				"pr",
				"property"
			],
			[
				"req",
				"request"
			],
			[
				"fu",
				"function"
			],
			[
				"set",
				"setTimeout"
			],
			[
				"TRO",
				"TRON_DB_DIALECT=postgres\t(.env)"
			],
			[
				"acco",
				"accountNet"
			],
			[
				"hex",
				"hexAddress"
			],
			[
				"Fu",
				"FULL_API_BASE"
			],
			[
				"Hex",
				"HEX_ADDRESS"
			],
			[
				"list",
				"listNodes"
			],
			[
				"getA",
				"getMyAccountInfo"
			],
			[
				"S",
				"SOLIDITY_API_BASE"
			],
			[
				"getUser",
				"getUserByAddress"
			],
			[
				"add",
				"addressToEncode"
			],
			[
				"en",
				"encodeAddress\t(module1.js)"
			],
			[
				"amountI",
				"amountInTron"
			],
			[
				"de",
				"destinationAddress"
			],
			[
				"ex",
				"exports\t(wallet.js)"
			],
			[
				"Req",
				"RequestSpecHelper\t(request_spec_helper.rb)"
			],
			[
				"la",
				"label"
			],
			[
				"tr",
				"transfer"
			],
			[
				"Date",
				"dateTime"
			],
			[
				"pos",
				"postgres_container"
			],
			[
				"po",
				"postgres_container"
			],
			[
				"get",
				"getNowBlock"
			],
			[
				"ti",
				"timestamp"
			],
			[
				"val",
				"val2"
			],
			[
				"fun",
				"function"
			],
			[
				"AP",
				"API_BASE"
			],
			[
				"for",
				"forEach\t(tron.js)"
			],
			[
				"transa",
				"transactionData"
			],
			[
				"js",
				"json"
			],
			[
				"my_",
				"my_bal"
			],
			[
				"ge",
				"getBalanceByAddress"
			],
			[
				"e",
				"error"
			],
			[
				"cret",
				"createAccount"
			],
			[
				"cr",
				"createOutgoingTransaction"
			],
			[
				"data",
				"dataValues"
			],
			[
				"dat",
				"dataValue"
			],
			[
				"da",
				"dataValue"
			],
			[
				"tran",
				"transactionController"
			],
			[
				"use",
				"userPvtKey"
			],
			[
				"to",
				"tokenName"
			],
			[
				"bala",
				"balance"
			],
			[
				"bal",
				"balances"
			],
			[
				"c",
				"console"
			],
			[
				"coin",
				"coinDCX"
			],
			[
				"stat",
				"stateController"
			],
			[
				"updat",
				"Update"
			],
			[
				"tx",
				"txId"
			],
			[
				"up",
				"updateProcessed"
			],
			[
				"resp",
				"response"
			],
			[
				"cre",
				"createTransfer"
			],
			[
				"sta",
				"stateController"
			],
			[
				"genertat",
				"generatingAccount"
			],
			[
				"a",
				"account"
			],
			[
				"s",
				"send"
			],
			[
				"st",
				"stringify"
			],
			[
				"dea",
				"detail"
			],
			[
				"p",
				"params"
			],
			[
				"gen",
				"generateAccount"
			],
			[
				"t",
				"type"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"first",
				"firstname"
			],
			[
				"todo",
				"todosController"
			],
			[
				"pro",
				"process"
			],
			[
				"body",
				"bodyParser"
			],
			[
				"me",
				"meta\tTag"
			],
			[
				"musta",
				"mustache"
			],
			[
				"must",
				"mustache"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 132.0,
		"last_filter": "preati",
		"selected_items":
		[
			[
				"preati",
				"Preferences: Package Control Settings â€“ User"
			],
			[
				" install package",
				"Package Control: Install Package"
			],
			[
				" install",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"js",
				"Set Syntax: JSON"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/hp/tron/server/controllers/transaction.js",
		"/home/hp/tron/server/models/user.js",
		"/home/hp/tron/server/tron.js",
		"/home/hp/tron/server/controllers/user.js",
		"/home/hp/tron/test/config.js",
		"/home/hp/tron/test/controllers/transaction.js",
		"/home/hp/tron/test/helper/seed.js",
		"/home/hp/tron/server/controllers/state.js",
		"/home/hp/tron/test/appTest.js",
		"/home/hp/tron/.env",
		"/home/hp/tron/test/controllers/user.js",
		"/home/hp/tron/test/seeders/seed.js",
		"/home/hp/tron/server/models/index.js",
		"/home/hp/tron/server/routes/index.js",
		"/home/hp/tron/server/config/config.js",
		"/home/hp/tron/test/models/index.js",
		"/home/hp/tron/.sequelizerc",
		"/home/hp/tron/server/seeders/seed.js",
		"/home/hp/tron/test/config/config.json",
		"/home/hp/tron/bashrc",
		"/home/hp/tron/server/models/transaction.js",
		"/home/hp/.bashrc",
		"/home/hp/tron/index.js",
		"/home/hp/tron/creds.js",
		"/home/hp/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/hp/.config/sublime-text-3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc.defaults.json",
		"/home/hp/tron/.git/config",
		"/home/hp/wallet-tron/.git/config",
		"/home/hp/wallet-tron/server/utils.js",
		"/home/hp/wallet-tron/.gitignore",
		"/home/hp/wallet-ripple/creds.js",
		"/home/hp/wallet-tron/server/wallet.js",
		"/home/hp/wallet-tron/server/config/config.js",
		"/home/hp/wallet-tron/.env",
		"/home/hp/wallet-tron/index.js",
		"/home/hp/wallet-tron/server/routes/index.js",
		"/home/hp/wallet-tron/server/controllers/state.js",
		"/home/hp/wallet-tron/server/utility/module1.js",
		"/home/hp/wallet-tron/server/controllers/user.js",
		"/home/hp/wallet-tron/creds.js",
		"/home/hp/wallet-tron1/server/config/config.json",
		"/home/hp/wallet-tron1/server/controllers/state.js",
		"/home/hp/wallet-tron1/test/appTest.js",
		"/home/hp/wallet-tron1/.env",
		"/home/hp/wallet-tron1/server/routes/index.js",
		"/home/hp/todos-api/app/controllers/todos_controller.rb",
		"/home/hp/todos-api/spec/requests/items_spec.rb",
		"/home/hp/todos-api/app/controllers/items_controller.rb",
		"/home/hp/todos-api/app/controllers/application_controller.rb",
		"/home/hp/todos-api/app/controllers/concerns/exception_handler.rb",
		"/home/hp/todos-api/app/controllers/concerns/response.rb",
		"/home/hp/todos-api/config/routes.rb",
		"/home/hp/todos-api/spec/factories/todos.rb",
		"/home/hp/todos-api/spec/rails_helper.rb",
		"/home/hp/todos-api/spec/support/request_spec_helper.rb",
		"/home/hp/todos-api/spec/requests/todos_spec.rb",
		"/home/hp/todos-api/spec/controllers/items_controller_spec.rb",
		"/home/hp/todos-api/spec/controllers/todos_controller_spec.rb",
		"/home/hp/todos-api/spec/factories/items.rb",
		"/home/hp/todos-api/app/models/item.rb",
		"/home/hp/todos-api/app/models/todo.rb",
		"/home/hp/todos-api/spec/models/item_spec.rb",
		"/home/hp/todos-api/spec/models/todo_spec.rb",
		"/home/hp/todos-api/db/migrate/20180712091814_create_todos.rb",
		"/home/hp/todos-api/Gemfile",
		"/home/hp/todos-api/db/migrate/20180712081904_create_items.rb",
		"/home/hp/wallet-template/server/controllers/transaction.js",
		"/home/hp/rortut/blog/app/views/posts/new.html.erb",
		"/home/hp/rortut/blog/app/controllers/posts_controller.rb",
		"/home/hp/rortut/blog/config/routes.rb",
		"/home/hp/rortut/blog/app/views/posts/index.html.erb",
		"/home/hp/rortut/blog/app/models/post.rb",
		"/home/hp/wallet-tron/test/appTest.js",
		"/home/hp/wallet-tron/app.js",
		"/home/hp/wallet-ripple/Dockerfile",
		"/home/hp/wallet-ripple/.gitignore",
		"/home/hp/wallet-ripple/.dockerignore",
		"/home/hp/wallet-ripple/.env",
		"/home/hp/wallet/setup.sh",
		"/home/hp/wallet/docker-compose11.yml",
		"/home/hp/wallet/.gitignore",
		"/home/hp/wallet/docker-compose.yml",
		"/home/hp/wallet/package.json",
		"/home/hp/wallet/package-lock.json",
		"/home/hp/wallet/server/config/config.json",
		"/home/hp/wallet/Dockerfile",
		"/home/hp/wallet/server/routes/index.js",
		"/home/hp/wallet/tron.js",
		"/home/hp/wallet/server/models/index.js",
		"/home/hp/wallet/.env",
		"/home/hp/wallet/.dockerignore",
		"/home/hp/practice_docker/.gitignore",
		"/home/hp/github-repo/docker-node-postgres-connect/run.sh",
		"/home/hp/github-repo/docker-node-postgres-connect/config.js",
		"/home/hp/docker-testing/package.json",
		"/home/hp/docker-testing/server.js",
		"/home/hp/docker-testing/Dockerfile",
		"/home/hp/docker-testing/.dockerignore",
		"/home/hp/wallet-tron/readme.txt",
		"/home/hp/wallet-tron/server/controllers/transaction.js",
		"/home/hp/wallet-tron/server/config/config.json",
		"/home/hp/wallet-tron/server/models/transaction.js",
		"/home/hp/wallet-tron/server/migrations/20180619090911-create-transaction.js",
		"/home/hp/wallet-tron/wallet.js",
		"/home/hp/wallet-tron/server.js",
		"/home/hp/testing/config/development.js",
		"/home/hp/wallet-template/server/models/outgoingtransaction.js",
		"/home/hp/wallet-template/server/models/user.js",
		"/home/hp/wallet-template/.env",
		"/home/hp/wallet-template/server/routes/index.js",
		"/home/hp/wallet-template/coindcx.js",
		"/home/hp/wallet-template/server/models/incomingtransaction.js",
		"/home/hp/wallet-template/server/controllers/incoming-transaction.js",
		"/home/hp/wallet-template/server/controllers/state.js",
		"/home/hp/wallet-template/server/migrations/20180619090911-create-outgoing-tranaction.js",
		"/home/hp/wallet-template/server/migrations/20180619091106-create-incoming-tranaction.js",
		"/home/hp/wallet-template/server/controllers/outgoing-transaction.js",
		"/home/hp/wallet-ripple/server/controllers/user.js",
		"/home/hp/wallet-ripple/package-lock.json",
		"/home/hp/wallet-ripple/server/routes/index.js",
		"/home/hp/wallet-ripple/server/controllers/transaction.js",
		"/home/hp/wallet-ripple/tron.js",
		"/home/hp/wallet-ripple/server/models/transaction.js",
		"/home/hp/wallet-ripple/server/migrations/addColumnToTransactions.js",
		"/home/hp/wallet-ripple/server/controllers/state.js",
		"/home/hp/wallet-ripple/coindcx.js",
		"/home/hp/wallet-ripple/node_modules/@tronscan/client/src/lib/sha256.js",
		"/home/hp/wallet-ripple/server/controllers/transfer.js"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 108.0,
		"where_history":
		[
			"/home/hp/tron"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"amt",
			"amtIntron",
			"amt",
			"amtIntron",
			"getUserByAddress",
			"seed.getUser",
			"console.log",
			"();\n",
			"wrongWithdrawalRequestId",
			"wrongUserAddress",
			"wrongUserId",
			"privateKey",
			"getTransaction",
			"getTransactionsCount",
			"TKcQwXUTA2mM1foiY3JV2FktLC6UxtAn9a",
			"create",
			"seeders",
			"null",
			",\n",
			"seed",
			"cb",
			"transactionCon",
			"userBalAfter",
			"TEST.",
			"config.TRON_TEST",
			"getBalance",
			"body",
			"connected tron",
			"message",
			"status",
			"process.env",
			"button",
			"env.",
			"processSingleTransaction",
			"XXX",
			"token",
			"XXX",
			"curl",
			"<<<",
			"===",
			">>>",
			"===",
			">>>",
			"<<<",
			"===",
			"<<<===",
			"<<<",
			">>>",
			"console.log",
			"process.env",
			"process",
			"if",
			"processBlock",
			"setState",
			"createTransaction",
			"setAddress",
			"process",
			"transfer",
			"fetch",
			"destinationAddress",
			"amountToSendInSun",
			"function",
			"axios",
			"createacc",
			"generateAccount",
			"state",
			"fn",
			"fn.apply",
			"getBalanceByAddress",
			"axios",
			"set_todo",
			"require",
			"rspec",
			"Rspec",
			"config.include",
			"dir",
			"port",
			"stateController",
			"setClientPK",
			"initiate",
			"createS",
			"processBlocksContinously",
			"console",
			"btoa",
			"');\n",
			"tokenName",
			"utils",
			"client",
			"generateAccount",
			"client",
			"transferInternally",
			"balance",
			"express",
			"pg",
			"cre",
			"client",
			"send",
			"getBa",
			"trial",
			"nodemon",
			"http",
			"TRX_",
			"transferInternally",
			",",
			"amounttosend",
			"transferInternally",
			"send",
			"state",
			"null",
			"hhhhhhhh",
			"setClientPK",
			"setPK",
			"send",
			"res.json",
			"transfer",
			"account",
			"sendamount",
			"transaction",
			"transfer",
			"user",
			"trans",
			"transfer",
			");\n",
			"client",
			"getDetail",
			"createAccount",
			"generating",
			"processBlock"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"helper",
			"},",
			"config",
			"const",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "channel.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 229.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
